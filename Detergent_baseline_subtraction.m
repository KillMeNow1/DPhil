%% This script takes hist values generated by Analysis file and combines 
% them to a single figure, using frequency of particle MW rather than 
% particle count. 

protein = 'TatBC'; 
detergent = 'GDN';
threshold = 'T0.00200';
s = ' ';

Prot_dir =  [pwd,'\',protein, s, detergent,' 0-2 CMC _0\cam1\Fit Data (',threshold,' P0.30 S9)'];
Deter_dir =  [pwd,'\',detergent,' 0-2 CMC _0\cam1\Fit Data (',threshold,' P0.30 S9)'];

cd(Prot_dir)

%% Choosing Histogram Parameters
Upper_limit = 0.1; %upper limit for particle contrast value 
NumBins = 100; %number of steps in histogram
StepSize = Upper_limit/NumBins;
%create a vector of the histogram bins centres 
Bins=(0+StepSize/2):StepSize:(Upper_limit-StepSize/2); 

%% Data location & loading -- protein + detergent
%pwd is current directory, **/* means all subfolders included, searching
%for any files containing "sorted particles". 'Files' lists all the file properties in a struct:
files=dir(fullfile(pwd, '**/*', '*sorted particles')); 
allfolders = cell(1,size(files,1));

for b=1:size(files,1)
    allfolders{b} = files(b).folder;
end
NumEvents = length(unique(allfolders)); %number of events in the directory
Contrast = cell(1,NumEvents); %preallocating cell array for contrast values
DataSize = zeros(1, NumEvents); %preallocating a vector for event particle counts

for i=1:NumEvents
    cd(strcat('event', num2str(i-1))) %changing directory to event#a
    SortPart=dir(fullfile(pwd,'*sorted particles')); %Number of files with 'sorted particles' within event
    if length(SortPart) == 1 
        temp = load(files(i).name); %loading sorted particles file
  % if there are multiple files called sorted particles within event
  % folder, we need to combine them first:
    elseif length(SortPart) > 1 
        temp=[];
        for k=1:length(SortPart)
            temp1 = load(SortPart(k).name);
            temp = [temp; temp1];
            clear('temp1')
        end
    else 
        sprintf('Check the files something is probably wrong with them')
    end
    Contrast{i} = temp(:,1); %taking first column from file = contrast values
    Contrast{i} = Contrast{i}(Contrast{i}<Upper_limit);
    DataSize (1,i) = size(Contrast{i},1);
    cd .. 
end
CombinedVal = zeros(sum(DataSize),1); 

%% Analysis of individual events and combination to one matrix
for j=1:NumEvents %number of events
    Event = Contrast{1,j}; %selecting individual events
    %h{j}=hist(Event,Bins); %h is array of all histogram values paired to x
    if (DataSize(j) == length(Event)) %this makes sure both we have the right event
        if j == 1 
            CombinedVal(1:DataSize(j)) = Event; %adds Event0 values to the beginning
        elseif  j>1
            %the topval and bottom calculate where the previous data ended
            %within the CombinedVal vector and how much space the new data requires
            bottom = sum(DataSize(1:(j-1)))+1;
            topval = bottom+sum(DataSize(j))-1;
            CombinedVal(bottom:topval)= Event; 
        end
    else
        sprintf('Error: Cannot combine data') 
    end
end
Total_prot = sum(DataSize);
clear('j','Event','bottom','topval','files','allfolders','b','Contrast','DataSize','i','NumEvents','SortPart','temp','temp1')

%% DETERGENT BASELINE
cd(Deter_dir)

% Data location & loading -- detergent
files=dir(fullfile(pwd, '**/*', '*sorted particles')); 
allfolders = cell(1,size(files,1));

for b=1:size(files,1)
    allfolders{b} = files(b).folder;
end
NumEvents = length(unique(allfolders)); %number of events in the directory
Contrast = cell(1,NumEvents); %preallocating cell array for contrast values
DataSize = zeros(1, NumEvents); %preallocating a vector for event particle counts

for i=1:NumEvents
    cd(strcat('event', num2str(i-1))) %changing directory to event#a
    SortPart=dir(fullfile(pwd,'*sorted particles')); %Number of files with 'sorted particles' within event
    if length(SortPart) == 1 
        temp = load(files(i).name); %loading sorted particles file
  % if there are multiple files called sorted particles within event
  % folder, we need to combine them first:
    elseif length(SortPart) > 1 
        temp=[];
        for k=1:length(SortPart)
            temp1 = load(SortPart(k).name);
            temp = [temp; temp1];
            clear('temp1')
        end
    else 
        sprintf('Check the files something is probably wrong with them')
    end
    Contrast{i} = temp(:,1); %taking first column from file = contrast values
    Contrast{i} = Contrast{i}(Contrast{i}<Upper_limit);
    DataSize (1,i) = size(Contrast{i},1); 
    cd .. 
end

Combined_DET = zeros(sum(DataSize),1); 

%% Analysis of individual events and combination to one matrix
for j=1:NumEvents %number of events
    Event = Contrast{1,j}; %selecting individual events
    %h{j}=hist(Event,Bins); %h is array of all histogram values paired to x
    if (DataSize(j) == length(Event)) %this makes sure both we have the right event
        if j == 1 
            Combined_DET(1:DataSize(j)) = Event; %adds Event0 values to the beginning
        elseif  j>1
            %the topval and bottom calculate where the previous data ended
            %within the CombinedVal vector and how much space the new data requires
            bottom = sum(DataSize(1:(j-1)))+1;
            topval = bottom+sum(DataSize(j))-1;
            Combined_DET(bottom:topval)= Event; 
        end
    else
        sprintf('Error: Cannot combine data') 
    end
end
Total_det = sum(DataSize);
clear('j','Event','bottom','topval','files','allfolders','b','Contrast','DataSize','i','NumEvents','SortPart','temp','temp1')

%% I'm making separate folder for the figures so they dont interfere with
% the analysis in case of multiple split sorted particles files per event
cd ..; cd ..; cd ..
dirct1 = [pwd,'\',protein,'+',detergent,' Subtracted'];
if exist(dirct1,'dir')~=7
   mkdir(dirct1)
end
cd(dirct1)

%% Figure(1): histograms overlayed
figure(1)
h_prot = hist(CombinedVal, Bins);
h_prot_freq = h_prot/Total_prot;
h_det = hist (Combined_DET, Bins);
h_det_freq = h_det/Total_det;
plot(Bins, h_det_freq,Bins, h_prot_freq)

xlabel('Particle contrast')
ylabel('Particle frequency')
legend (detergent, [detergent,'+',protein])
grid on

fig_title = [protein,'+',detergent,' vs',s,detergent,' overlayed'];
title(sprintf('%s in %s data vs %s data overlayed', protein, detergent,detergent))
savefig(figure(1),sprintf('%s.fig', fig_title)) 
saveas(figure(1), sprintf('%s', fig_title),'png') 

%% Figure(2): combined data subtracted
figure(2)
subtracted = h_prot_freq-h_det_freq;
bar(Bins, subtracted)

xlabel('Particle contrast')
ylabel('Particle frequency')
grid on

fig_title = [protein,'+',detergent,s,'subtracted'];
title(sprintf('%s in %s data with %s baseline subtracted', protein, detergent,detergent))
savefig(figure(2),sprintf('%s.fig', fig_title)) 
saveas(figure(2), sprintf('%s', fig_title),'png') 

clear('dirct1', 'dirct2') 

cd ..
